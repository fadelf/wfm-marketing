{"version":3,"sources":["components/services/AuthenticationService.js","components/services/AuthenticatedRoute.jsx","components/services/LoginService.js","components/views/FooterComponentList.jsx","components/views/HeaderComponent.jsx","components/views/LoginComponent.jsx","components/views/FooterComponent.jsx","components/views/WelcomeComponent.jsx","components/views/ErrorComponent.jsx","components/views/LogoutComponent.jsx","components/services/EmployeeDataService.js","components/views/ListEmployeeComponent.jsx","components/views/EmployeeComponent.jsx","components/services/JobDataService.js","components/views/ListJobComponent.jsx","components/views/JobComponent.jsx","components/services/ShiftDataService.js","components/views/ListShiftComponent.jsx","components/views/ShiftComponent.jsx","components/services/SkillDataService.js","components/views/ListSkillComponent.jsx","components/views/SkillComponent.jsx","components/services/RoleDataService.js","components/views/ListRoleComponent.jsx","components/views/RoleComponent.jsx","components/services/EmployeeSkillService.js","components/views/ListEmployeeSkillComponent.jsx","components/views/EmployeeSkillComponent.jsx","components/services/OptimizerService.js","components/views/OptimizerComponent.jsx","components/views/WorkforceApp.jsx","App.js","serviceWorker.js","index.js"],"names":["username","password","role","sessionStorage","setItem","removeItem","getItem","user","AuthenticatedRoute","AuthenticationService","isUserLoggedIn","this","props","to","Component","SERVICE_API","loginData","axios","post","FooterComponentList","className","HeaderComponent","isAdminLoggedIn","getUserLoggedIn","getLoggedInUserName","href","onClick","logout","LoginComponent","state","email","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","LoginService","getLogin","then","resp","console","log","data","registerSuccessfulLogin","history","push","catch","htmlFor","type","id","onChange","FooterComponent","WelcomeComponent","match","params","variant","title","color","animate","style","height","label","labelStyle","fontSize","fontFamily","fill","radius","labelPosition","width","showLegends","legendPosition","points","x","y","xLabel","yLabel","ErrorComponent","LogoutComponent","get","delete","todo","put","ListEmployeeComponent","employees","message","refreshEmployees","deleteEmployeeClicked","updateEmployeeClicked","addEmployeeClicked","EmployeeDataService","retrieveAllEmployees","response","deleteEmployee","bordered","striped","hover","size","map","employee","key","employeeId","address","roleCode","roleName","employeeStatus","EmployeeComponent","birthPlace","birthDate","gender","phoneNumber","joinDate","resignationDate","onSubmit","validate","retrieveEmployee","moment","format","values","errors","length","nip","createEmployee","updateEmployee","initialValues","validateOnChange","validateOnBlur","enableReinitialize","component","ListJobComponent","jobs","refreshJobs","deleteJobClicked","updateJobClicked","addJobClicked","JobDataService","retrieveAllJobs","deleteJob","job","jobCode","jobName","shiftCode","activityDate","activityName","startTime","endTime","JobComponent","instance","classCount","retrieveJob","createJob","updateJob","ListShiftComponent","shifts","refreshShifts","deleteShiftClicked","updateShiftClicked","addShiftClicked","ShiftDataService","retrieveAllShifts","deleteShift","shift","shiftName","ShiftComponent","retrieveShift","createShift","updateShift","ListSkillComponent","skills","refreshSkills","deleteSkillClicked","updateSkillClicked","addSkillClicked","SkillDataService","retrieveAllSkills","deleteSkill","skill","skillCode","skillName","SkillComponent","retrieveSkill","createSkill","updateSkill","ListRoleComponent","roles","refreshRoles","deleteRoleClicked","updateRoleClicked","addRoleClicked","RoleDataService","retrieveAllRoles","deleteRole","RoleComponent","retrieveRole","createRole","updateRole","employeeSkills","refreshEmployeeSkills","deleteEmployeeSkillClicked","updateEmployeeSkillClicked","addEmployeeSkillClicked","EmployeeSkillService","retrieveAllEmployeeSkills","deleteEmployeeSkill","employeeSkill","EmployeeSkillComponent","retrieveEmployeeSkill","skiilCode","createEmployeeSkill","updateEmployeeSkill","OptimizerComponent","apigroup","apijob","optimizerClicked","refreshActiveEmployees","refreshActiveJobs","retrieveAllActiveEmployees","OptimizerService","getOptimizer","item","group","start_time","end_time","previousState","groups","items","defaultTimeStart","add","defaultTimeEnd","WorkforceApp","basename","path","exact","ListEmployeeSkillComponent","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95f31658.chunk.js","sourcesContent":["class AuthenticationService {\r\n    registerSuccessfulLogin(username, password, role) {\r\n        sessionStorage.setItem('authenticatedUser', username);\r\n        sessionStorage.setItem('authenticatedRole', role);\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(user === null) return false\r\n        return true\r\n    }\r\n\r\n    isAdminLoggedIn() {\r\n        let role = sessionStorage.getItem('authenticatedRole')\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(role === \"KBG\" && user !== null) return true\r\n        return false\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(user === null) {\r\n            return ''\r\n        } else {\r\n            return user\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nclass AuthenticatedRoute extends Component {\r\n    render() {\r\n        if(AuthenticationService.isUserLoggedIn()) {\r\n            return <Route {...this.props}/>\r\n        } else {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}`;\r\n\r\nclass LoginService {\r\n    getLogin(loginData) {\r\n        return axios.post(`${SERVICE_API}/login`, loginData);\r\n    }\r\n}\r\n\r\nexport default new LoginService();","import React, {Component} from 'react';\r\n\r\nclass FooterComponentList extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer-list\">\r\n                <span className=\"text-muted\">All Right Reserved 2019 @Workforce Management Team</span>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponentList","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\n\r\nclass HeaderComponent extends Component {\r\n    render() {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        const isAdminLoggedIn = AuthenticationService.isAdminLoggedIn();\r\n        const getUserLoggedIn = AuthenticationService.getLoggedInUserName();\r\n\r\n        return(\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"https://raharja.ac.id/\" className=\"navbar-brand\">Workforce Management</a></div>\r\n                    <ul className=\"navbar-nav\"> \r\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to={\"/welcome/\" + getUserLoggedIn}>Home</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/employees\">Employee</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/employeeSkills\">Employee Skill</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/roles\">Role</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/jobs\">Job</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/shifts\">Shift</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/skills\">Skill</Link></li>}\r\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/optimizer\">Optimizer</Link></li>}\r\n                    </ul>\r\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n                        {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\r\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\nimport LoginService from '../services/LoginService.js';\r\nimport './LoginComponent.css';\r\nimport FooterComponentList from '../views/FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            role:'',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.name]:event.target.value})\r\n    }\r\n\r\n    loginClicked() {\r\n        LoginService.getLogin({\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        })\r\n        .then((resp) => {\r\n            console.log(\"Success Login: \" + resp.data[1])\r\n            if(resp.data[0]) {\r\n                AuthenticationService.registerSuccessfulLogin(resp.data[1], this.state.password, resp.data[2]);\r\n                this.props.history.push(`welcome/${resp.data[1]}`)\r\n            } else {\r\n                if(this.state.email === \"fitri.andriyani\" && this.state.password === \"keepsecret\") {\r\n                    console.log(\"Success Login Admin\")\r\n                    AuthenticationService.registerSuccessfulLogin(this.state.email, this.state.password, \"KBG\");\r\n                    this.props.history.push(`welcome/${this.state.email}`)\r\n                } else {\r\n                    console.log(\"Failed Login\")\r\n                    this.setState({showSuccessMessage:false})\r\n                    this.setState({hasLoginFailed:true})\r\n                }                \r\n            }            \r\n        })\r\n        .catch(() => {\r\n            console.log(\"Catch Success Login\")\r\n            if(this.state.email === \"fitri.andriyani\" && this.state.password === \"keepsecret\") {\r\n                console.log(\"Success Login Admin\")\r\n                AuthenticationService.registerSuccessfulLogin(this.state.email, this.state.password, \"KBG\");\r\n                this.props.history.push(`welcome/${this.state.email}`)\r\n            } else {\r\n                console.log(\"Failed Login\")\r\n                this.setState({showSuccessMessage:false})\r\n                this.setState({hasLoginFailed:true})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <HeaderComponent/>\r\n            <div className=\"row\">                \r\n                <div className=\"col-md-4\">\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-primary\">Invalid Credentials</div>}\r\n                    <div className=\"container-gray\">\r\n                        <div className=\"col login-sec\">\r\n                            <h2 className=\"text-center\">Sign In</h2>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"usr\">Email:</label>\r\n                                    <input type=\"text\" id=\"usr\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"pwd\">Password:</label>\r\n                                    <input type=\"password\" id=\"pwd\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                                    <br/>\r\n                                    <button className=\"btn btn-primary\" onClick={this.loginClicked}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent","import React, {Component} from 'react';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer\">\r\n                <span className=\"text-muted\">All Right Reserved 2019 @Workforce Management Team</span>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\r\nimport LineChart from 'react-linechart';\r\nimport '../../../node_modules/react-linechart/dist/styles.css';\r\n\r\nclass WelcomeComponent extends Component {\r\n    render() {\r\n\r\n        const data = [\r\n            {          \t\t\t\t\t\t\t\t\t\r\n                color: \"steelblue\", \r\n                points: [\r\n                    {x: 1, y: 1}, \r\n                    {x: 2, y: 2}, \r\n                    {x: 3, y: 3},\r\n                    {x: 4, y: 4}, \r\n                    {x: 5, y: 5}, \r\n                    {x: 6, y: 6},\r\n                    {x: 7, y: 7} \r\n                ] \r\n            }\r\n        ];\r\n\r\n        return(\r\n            <>\r\n                <HeaderComponent/>\r\n                <Jumbotron>\r\n                    {<h1>Welcome {this.props.match.params.name}</h1>}\r\n                    <p>\r\n                        This is a workforce management application, You can manage your employees <Link to=\"/employees\">here</Link>.\r\n                    </p>\r\n                    <p>\r\n                        You can manage job for your employees <Link to=\"/jobs\">here</Link>.\r\n                    </p>\r\n                    <p>\r\n                        <Button variant=\"primary\">Learn more</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ReactMinimalPieChart\r\n                                data={[\r\n                                    {\r\n                                        title: 'Maximum Job',\r\n                                        value: 10,\r\n                                        color: '#3232A8'\r\n                                    },\r\n                                    {\r\n                                        title: 'Minimum Job',\r\n                                        value: 5,\r\n                                        color: '#3298A8'\r\n                                    }\r\n                                ]}\r\n                                animate\r\n                                style={{height: '200px'}}\r\n                                label\r\n                                labelStyle={{\r\n                                    fontSize: '7px',\r\n                                    fontFamily: 'sans-serif',\r\n                                    fill: '#121212'\r\n                                }}\r\n                                radius={42}\r\n                                labelPosition={112}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <LineChart \r\n                                width={600}\r\n                                height={400}\r\n                                showLegends\r\n                                legendPosition=\"top-right\"\r\n                                data={data}\r\n                                xLabel=\"Job Count\"\r\n                                yLabel=\"Employee\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n                <hr/>\r\n                <FooterComponent/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WelcomeComponent","import React from 'react';\r\n\r\nfunction ErrorComponent() {\r\n    return <div>An errror occured!</div>\r\n}\r\n\r\nexport default ErrorComponent","import React, {Component} from 'react';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass LogoutComponent extends Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <HeaderComponent/>\r\n                <h1>You are logged out</h1>\r\n                <div className=\"container\">\r\n                    Thank Your for Using Our Application\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogoutComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/employees`;\r\n\r\nclass EmployeeDataService {\r\n    retrieveAllEmployees(name) {\r\n        return axios.get(`${SERVICE_API}/list`,);\r\n    }\r\n    retrieveAllActiveEmployees() {\r\n        return axios.get(`${SERVICE_API}/list/active`,);\r\n    }\r\n    deleteEmployee(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveEmployee(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateEmployee(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createEmployee(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new EmployeeDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport EmployeeDataService from '../services/EmployeeDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employees: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshEmployees = this.refreshEmployees.bind(this);\r\n        this.deleteEmployeeClicked = this.deleteEmployeeClicked.bind(this);\r\n        this.updateEmployeeClicked = this.updateEmployeeClicked.bind(this);\r\n        this.addEmployeeClicked = this.addEmployeeClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshEmployees();\r\n    }\r\n\r\n    refreshEmployees() {\r\n        EmployeeDataService.retrieveAllEmployees(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({employees: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteEmployeeClicked(id, name) {\r\n        EmployeeDataService.deleteEmployee(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of employee ${name} Successful`})\r\n                    this.refreshEmployees()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateEmployeeClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/employee/${id}`)\r\n    }\r\n\r\n    addEmployeeClicked() {\r\n        this.props.history.push('/employee/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Employee</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee ID</th>\r\n                                <th>Name</th>\r\n                                <th>Username</th>\r\n                                <th>Address</th>\r\n                                <th>Email</th>\r\n                                <th>Role</th>\r\n                                <th>Status</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employees.map (\r\n                                    employee => \r\n                                    <tr key={employee.employeeId}>\r\n                                        <td>{employee.employeeId}</td>\r\n                                        <td>{employee.name}</td>\r\n                                        <td>{employee.username}</td>\r\n                                        <td>{employee.address}</td>\r\n                                        <td>{employee.email}</td>\r\n                                        <td>{employee.roleCode.roleName}</td>\r\n                                        <td>{employee.employeeStatus}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateEmployeeClicked(employee.employeeId)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteEmployeeClicked(employee.employeeId, employee.name)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addEmployeeClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport EmployeeDataService from '../services/EmployeeDataService.js';\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass EmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employeeId: '',\r\n            name: '',\r\n            username: '',\r\n            password: '',\r\n            birthPlace: '',\r\n            birthDate: '',\r\n            address: '',\r\n            gender: '',\r\n            phoneNumber: '',\r\n            email: '',\r\n            joinDate: '',\r\n            resignationDate: '',\r\n            employeeStatus: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        EmployeeDataService.retrieveEmployee(this.state.id)\r\n        .then(response => this.setState({\r\n            employeeId:response.data.employeeId,\r\n            name:response.data.name,\r\n            username:response.data.username,\r\n            password:response.data.password,\r\n            birthPlace:response.data.birthPlace,\r\n            birthDate:moment(response.data.birthDate).format('YYYY-MM-DD'),\r\n            address:response.data.address,\r\n            gender:response.data.gender,\r\n            phoneNumber:response.data.phoneNumber,\r\n            email:response.data.email,\r\n            joinDate:moment(response.data.joinDate).format('YYYY-MM-DD'),\r\n            resignationDate:moment(response.data.resignationDate).format('YYYY-MM-DD'),\r\n            employeeStatus:response.data.employeeStatus\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.name) {\r\n            errors.name = 'Enter an employee name'           \r\n        } else if(values.name.length < 4) {\r\n            errors.name = 'Enter at least 4 characters for employee name'\r\n        }\r\n\r\n        if(!values.username) {\r\n            errors.nip = 'Enter a NIP'           \r\n        } else if(values.nip.length < 4) {\r\n            errors.nip = 'Enter at least 4 characters for employee username'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            EmployeeDataService.createEmployee({\r\n                employeeId:values.employeeId,\r\n                name:values.name,\r\n                username:values.username,\r\n                password:values.password,\r\n                birthPlace:values.birthPlace,\r\n                birthDate:values.birthDate,\r\n                address:values.address,\r\n                gender:values.gender,\r\n                phoneNumber:values.phoneNumber,\r\n                email:values.email,\r\n                joinDate:values.joinDate,\r\n                resignationDate:'',\r\n                employeeStatus:values.employeeStatus,\r\n                roleCode:values.roleCode\r\n            }).then(() => this.props.history.push('/employees'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            EmployeeDataService.updateEmployee(this.state.id, {\r\n                employeeId:values.employeeId,\r\n                name:values.name,\r\n                username:values.username,\r\n                password:values.password,\r\n                birthPlace:values.birthPlace,\r\n                birthDate:values.birthDate,\r\n                address:values.address,\r\n                gender:values.gender,\r\n                phoneNumber:values.phoneNumber,\r\n                email:values.email,\r\n                joinDate:values.joinDate,\r\n                resignationDate:'',\r\n                employeeStatus:values.employeeStatus,\r\n                roleCode:values.roleCode\r\n            }).then(() => this.props.history.push('/employees'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {employeeId, name, username, password, birthPlace, birthDate, address, gender, phoneNumber, email, joinDate, resignationDate, employeeStatus, roleCode} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Employee Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <Formik \r\n                                initialValues={{employeeId, name, username, password, birthPlace, birthDate, address, gender, phoneNumber, email, joinDate, resignationDate, employeeStatus, roleCode}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"name\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"username\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Employee ID</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"employeeId\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Name</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"name\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Username</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"username\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Password</label>\r\n                                                        <Field className=\"form-control\" type=\"password\" name=\"password\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Birth Place</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"birthPlace\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Birth Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"birthDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Address</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"address\"/>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">                                            \r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Gender</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"gender\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Phone Number</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"phoneNumber\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Email</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"email\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Join Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"joinDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Resignation Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"resignationDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Employee Status</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"employeeStatus\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Role</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"roleCode\"/>\r\n                                                    </fieldset>\r\n                                                </div>                                                \r\n                                            </div>                                            \r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>                                            \r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <br/>\r\n                <FooterComponent/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/jobs`;\r\n\r\nclass JobDataService {\r\n    retrieveAllJobs(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteJob(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveJob(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateJob(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createJob(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new JobDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport JobDataService from '../services/JobDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListJobComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jobs: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshJobs = this.refreshJobs.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this);\r\n        this.updateJobClicked = this.updateJobClicked.bind(this);\r\n        this.addJobClicked = this.addJobClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshJobs();\r\n    }\r\n\r\n    refreshJobs() {\r\n        JobDataService.retrieveAllJobs(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({jobs: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteJobClicked(id, name) {\r\n        JobDataService.deleteJob(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of job ${name} Successful`})\r\n                    this.refreshJobs()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateJobClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/job/${id}`)\r\n    }\r\n\r\n    addJobClicked() {\r\n        this.props.history.push('/job/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Job</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Job Code</th>\r\n                                <th>Job Name</th>\r\n                                <th>Shift</th>\r\n                                <th>Activity Date</th>\r\n                                <th>Activity Name</th>\r\n                                <th>Start</th>\r\n                                <th>End</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.jobs.map (\r\n                                    job => \r\n                                    <tr key={job.jobCode}>\r\n                                        <td>{job.jobCode}</td>\r\n                                        <td>{job.jobName}</td>\r\n                                        <td>{job.shiftCode}</td>\r\n                                        <td>{job.activityDate}</td>\r\n                                        <td>{job.activityName}</td>\r\n                                        <td>{job.startTime}</td>\r\n                                        <td>{job.endTime}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateJobClicked(job.jobCode)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteJobClicked(job.jobCode, job.jobName)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addJobClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListJobComponent","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport JobDataService from '../services/JobDataService.js';\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass JobComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            jobCode: '',\r\n            jobName: '',\r\n            shiftCode: '',\r\n            activityDate: '',\r\n            activityName: '',\r\n            instance: '',\r\n            classCount: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            employeeId: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        JobDataService.retrieveJob(this.state.id)\r\n        .then(response => this.setState({\r\n            jobCode:response.data.jobCode,\r\n            jobName:response.data.jobName,\r\n            shiftCode:response.data.shiftCode,\r\n            activityDate:moment(response.data.activityDate).format('YYYY-MM-DD'),\r\n            activityName:response.data.activityName,\r\n            instance:response.data.instance,\r\n            classCount:response.data.classCount,\r\n            startTime:response.data.startTime,\r\n            endTime:response.data.endTime,\r\n            employeeId:response.data.employeeId\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.jobName) {\r\n            errors.jobName = 'Enter a job name'           \r\n        } else if(values.jobName.length < 4) {\r\n            errors.jobName = 'Enter at least 4 characters for job name'\r\n        }\r\n\r\n        if(!values.jobCode) {\r\n            errors.jobCode = 'Enter a job code'           \r\n        } else if(values.jobCode.length < 1) {\r\n            errors.jobCode = 'Enter at least 1 characters for job code'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            JobDataService.createJob({\r\n                jobCode:values.jobCode,\r\n                jobName:values.jobName,\r\n                shiftCode:values.shiftCode,\r\n                activityDate:values.activityDate,\r\n                activityName:values.activityName,\r\n                instance:values.instance,\r\n                classCount:values.classCount,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime,\r\n                employeeId:values.employeeId\r\n            }).then(() => this.props.history.push('/jobs'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            JobDataService.updateJob(this.state.id, {\r\n                jobCode:values.jobCode,\r\n                jobName:values.jobName,\r\n                shiftCode:values.shiftCode,\r\n                activityDate:values.activityDate,\r\n                activityName:values.activityName,\r\n                instance:values.instance,\r\n                classCount:values.classCount,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime,\r\n                employeeId:values.employeeId\r\n            }).then(() => this.props.history.push('/jobs'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {jobCode, jobName, shiftCode, activityDate, activityName, instance, classCount, startTime, endTime, employeeId} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Job Form</h4>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <Formik \r\n                                initialValues={{jobCode, jobName, shiftCode, activityDate, activityName, instance, classCount, startTime, endTime, employeeId}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"jobName\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"jobCode\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Job Code</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"jobCode\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Job Name</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"jobName\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Shift Code</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"shiftCode\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Activity Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"activityDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Activity Name</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"activityName\"/>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Instance</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"instance\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Class Count</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"classCount\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Start Time</label>\r\n                                                        <Field className=\"form-control\" type=\"time\" name=\"startTime\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>End Time</label>\r\n                                                        <Field className=\"form-control\" type=\"time\" name=\"endTime\"/>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                            </div>                                                                              \r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <br/>\r\n                <FooterComponent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/shifts`;\r\n\r\nclass ShiftDataService {\r\n    retrieveAllShifts(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteShift(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveShift(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateShift(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createShift(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new ShiftDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport ShiftDataService from '../services/ShiftDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListShiftComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            shifts: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshShifts = this.refreshShifts.bind(this);\r\n        this.deleteShiftClicked = this.deleteShiftClicked.bind(this);\r\n        this.updateShiftClicked = this.updateShiftClicked.bind(this);\r\n        this.addShiftClicked = this.addShiftClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshShifts();\r\n    }\r\n\r\n    refreshShifts() {\r\n        ShiftDataService.retrieveAllShifts(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({shifts: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteShiftClicked(id, name) {\r\n        ShiftDataService.deleteShift(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of shift ${name} Successful`})\r\n                    this.refreshShifts()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateShiftClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/shift/${id}`)\r\n    }\r\n\r\n    addShiftClicked() {\r\n        this.props.history.push('/shift/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Shift</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Shift Code</th>\r\n                                <th>Shift Name</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.shifts.map (\r\n                                    shift => \r\n                                    <tr key={shift.shiftCode}>\r\n                                        <td>{shift.shiftCode}</td>\r\n                                        <td>{shift.shiftName}</td>\r\n                                        <td>{shift.startTime}</td>\r\n                                        <td>{shift.endTime}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateShiftClicked(shift.shiftCode)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteShiftClicked(shift.shiftCode, shift.shiftName)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addShiftClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListShiftComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport ShiftDataService from '../services/ShiftDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ShiftComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            shiftCode: '',\r\n            shiftName: '',\r\n            startTime: '',\r\n            endTime: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        ShiftDataService.retrieveShift(this.state.id)\r\n        .then(response => this.setState({\r\n            shiftCode:response.data.shiftCode,\r\n            shiftName:response.data.shiftName,\r\n            startTime:response.data.startTime,\r\n            endTime:response.data.endTime\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.shiftCode) {\r\n            errors.shiftCode = 'Enter a shift code'           \r\n        } else if(values.shiftCode.length < 1) {\r\n            errors.shiftCode = 'Enter at least 1 characters for shift code'\r\n        }\r\n\r\n        if(!values.shiftName) {\r\n            errors.shiftName = 'Enter a shift name'           \r\n        } else if(values.shiftName.length < 4) {\r\n            errors.shiftName = 'Enter at least 4 characters for shift name'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            ShiftDataService.createShift({\r\n                shiftCode:values.shiftCode,\r\n                shiftName:values.shiftName,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime\r\n            }).then(() => this.props.history.push('/shifts'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            ShiftDataService.updateShift(this.state.id, {\r\n                shiftCode:values.shiftCode,\r\n                shiftName:values.shiftName,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime\r\n            }).then(() => this.props.history.push('/shifts'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {shiftCode, shiftName, startTime, endTime} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Shift Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{shiftCode, shiftName, startTime, endTime}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"shiftCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"shiftName\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Shift Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"shiftCode\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Shift Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"shiftName\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Start Time</label>\r\n                                                <Field className=\"form-control\" type=\"time\" name=\"startTime\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>End Time</label>\r\n                                                <Field className=\"form-control\" type=\"time\" name=\"endTime\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/skills`;\r\n\r\nclass SkillDataService {\r\n    retrieveAllSkills(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteSkill(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveSkill(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateSkill(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createSkill(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new SkillDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport SkillDataService from '../services/SkillDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListSkillComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            skills: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshSkills = this.refreshSkills.bind(this);\r\n        this.deleteSkillClicked = this.deleteSkillClicked.bind(this);\r\n        this.updateSkillClicked = this.updateSkillClicked.bind(this);\r\n        this.addSkillClicked = this.addSkillClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshSkills();\r\n    }\r\n\r\n    refreshSkills() {\r\n        SkillDataService.retrieveAllSkills(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({skills: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteSkillClicked(id, name) {\r\n        SkillDataService.deleteSkill(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of skill ${name} Successful`})\r\n                    this.refreshSkills()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateSkillClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/skill/${id}`)\r\n    }\r\n\r\n    addSkillClicked() {\r\n        this.props.history.push('/skill/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Skill</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Skill Code</th>\r\n                                <th>Skill Name</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.skills.map (\r\n                                    skill => \r\n                                    <tr key={skill.skillCode}>\r\n                                        <td>{skill.skillCode}</td>\r\n                                        <td>{skill.skillName}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateSkillClicked(skill.skillCode)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteSkillClicked(skill.skillCode, skill.skillName)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addSkillClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListSkillComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport SkillDataService from '../services/SkillDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass SkillComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            skillCode: '',\r\n            skillName: ''        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        SkillDataService.retrieveSkill(this.state.id)\r\n        .then(response => this.setState({\r\n            skillCode:response.data.skillCode,\r\n            skillName:response.data.skillName\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.skillCode) {\r\n            errors.skillCode = 'Enter a skill code'           \r\n        } else if(values.skillCode.length < 1) {\r\n            errors.skillCode = 'Enter at least 1 characters for skill code'\r\n        }\r\n\r\n        if(!values.skillName) {\r\n            errors.skillName = 'Enter a skill name'           \r\n        } else if(values.skillName.length < 4) {\r\n            errors.skillName = 'Enter at least 4 characters for skill name'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            SkillDataService.createSkill({\r\n                skillCode:values.skillCode,\r\n                skillName:values.skillName\r\n            }).then(() => this.props.history.push('/skills'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            SkillDataService.updateSkill(this.state.id, {\r\n                skillCode:values.skillCode,\r\n                skillName:values.skillName\r\n            }).then(() => this.props.history.push('/skills'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {skillCode, skillName} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Skill Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{skillCode, skillName}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"skillCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"skillName\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Skill Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillCode\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Skill Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillName\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/roles`;\r\n\r\nclass RoleDataService {\r\n    retrieveAllRoles(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteRole(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveRole(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateRole(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createRole(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new RoleDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport RoleDataService from '../services/RoleDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListRoleComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            roles: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshRoles = this.refreshRoles.bind(this);\r\n        this.deleteRoleClicked = this.deleteRoleClicked.bind(this);\r\n        this.updateRoleClicked = this.updateRoleClicked.bind(this);\r\n        this.addRoleClicked = this.addRoleClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshRoles();\r\n    }\r\n\r\n    refreshRoles() {\r\n        RoleDataService.retrieveAllRoles(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({roles: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteRoleClicked(id, name) {\r\n        RoleDataService.deleteRole(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of role ${name} Successful`})\r\n                    this.refreshRoles()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateRoleClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/role/${id}`)\r\n    }\r\n\r\n    addRoleClicked() {\r\n        this.props.history.push('/role/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Role</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Role Code</th>\r\n                                <th>Role Name</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.roles.map (\r\n                                    role => \r\n                                    <tr key={role.roleCode}>\r\n                                        <td>{role.roleCode}</td>\r\n                                        <td>{role.roleName}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateRoleClicked(role.roleCode)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteRoleClicked(role.roleCode, role.roleName)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addRoleClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListRoleComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport RoleDataService from '../services/RoleDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass RoleComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            roleCode: '',\r\n            roleName: ''        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        RoleDataService.retrieveRole(this.state.id)\r\n        .then(response => this.setState({\r\n            roleCode:response.data.roleCode,\r\n            roleName:response.data.roleName\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.roleCode) {\r\n            errors.roleCode = 'Enter a role code'           \r\n        } else if(values.roleCode.length < 1) {\r\n            errors.roleCode = 'Enter at least 1 characters for role code'\r\n        }\r\n\r\n        if(!values.roleName) {\r\n            errors.roleName = 'Enter a role name'           \r\n        } else if(values.roleName.length < 4) {\r\n            errors.roleName = 'Enter at least 4 characters for role name'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            RoleDataService.createRole({\r\n                roleCode:values.roleCode,\r\n                roleName:values.roleName\r\n            }).then(() => this.props.history.push('/roles'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            RoleDataService.updateRole(this.state.id, {\r\n                roleCode:values.roleCode,\r\n                roleName:values.roleName\r\n            }).then(() => this.props.history.push('/roles'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {roleCode, roleName} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Role Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{roleCode, roleName}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"roleCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"roleName\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Role Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"roleCode\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Role Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"roleName\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoleComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/employeeSkills`;\r\n\r\nclass EmployeeDataService {\r\n    retrieveAllEmployeeSkills(name) {\r\n        return axios.get(`${SERVICE_API}/list`,);\r\n    }\r\n    deleteEmployeeSkill(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveEmployeeSkill(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateEmployeeSkill(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createEmployeeSkill(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new EmployeeDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport EmployeeSkillService from '../services/EmployeeSkillService.js';\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employeeSkills: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshEmployeeSkills = this.refreshEmployeeSkills.bind(this);\r\n        this.deleteEmployeeSkillClicked = this.deleteEmployeeSkillClicked.bind(this);\r\n        this.updateEmployeeSkillClicked = this.updateEmployeeSkillClicked.bind(this);\r\n        this.addEmployeeSkillClicked = this.addEmployeeSkillClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshEmployeeSkills();\r\n    }\r\n\r\n    refreshEmployeeSkills() {\r\n        EmployeeSkillService.retrieveAllEmployeeSkills(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({employeeSkills: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteEmployeeSkillClicked(id, name) {\r\n        EmployeeSkillService.deleteEmployeeSkill(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of employee skill ${name} Successful`})\r\n                    this.refreshEmployeeSkills()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateEmployeeSkillClicked(id) {\r\n        this.props.history.push(`/employeeSkill/${id}`)\r\n    }\r\n\r\n    addEmployeeSkillClicked() {\r\n        this.props.history.push('/employeeSkill/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Employee Skill</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee Name</th>\r\n                                <th>Skill</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employeeSkills.map (\r\n                                    employeeSkill => \r\n                                    <tr key={employeeSkill.id}>\r\n                                        <td>{employeeSkill.employeeId}</td>\r\n                                        <td>{employeeSkill.skillCode}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateEmployeeSkillClicked(employeeSkill.id)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteEmployeeSkillClicked(employeeSkill.id, employeeSkill.id)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addEmployeeSkillClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport EmployeeSkillService from '../services/EmployeeSkillService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass EmployeeSkillComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employeeId: '',\r\n            skillCode: ''        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        EmployeeSkillService.retrieveEmployeeSkill(this.state.id)\r\n        .then(response => this.setState({\r\n            employeeId:response.data.employeeId,\r\n            skillCode:response.data.skillCode\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.employeeId) {\r\n            errors.employeeId = 'Enter an employee ID'           \r\n        } else if(values.employeeId.length < 1) {\r\n            errors.employeeId = 'Enter at least 1 characters for employee ID'\r\n        }\r\n\r\n        if(!values.skillCode) {\r\n            errors.skiilCode = 'Enter a skill code'           \r\n        } else if(values.skillCode.length < 1) {\r\n            errors.skillCode = 'Enter at least 1 characters for skill code'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            EmployeeSkillService.createEmployeeSkill({\r\n                employeeId:values.employeeId,\r\n                skillCode:values.skillCode\r\n            }).then(() => this.props.history.push('/employeeSkills'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            EmployeeSkillService.updateEmployeeSkill(this.state.id, {\r\n                employeeId:values.employeeId,\r\n                skillCode:values.skillCode\r\n            }).then(() => this.props.history.push('/employeeSkills'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {employeeId, skillCode} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Employee Skill Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{employeeId, skillCode}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"employeeId\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"skillCode\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Employee ID</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"employeeId\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Skill Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillCode\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeSkillComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}`;\r\n\r\nclass OptimizerService {\r\n    getOptimizer() {\r\n        return axios.get(`${SERVICE_API}/optimizer`);\r\n    }\r\n}\r\n\r\nexport default new OptimizerService();","import React, { Component } from \"react\";\r\nimport Timeline from 'react-calendar-timeline';\r\nimport 'react-calendar-timeline/lib/Timeline.css';\r\nimport moment from 'moment'\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\nimport EmployeeDataService from '../services/EmployeeDataService.js';\r\nimport OptimizerService from '../services/OptimizerService.js';\r\n\r\nclass OptimizerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            apigroup: [],\r\n            apijob: [],\r\n            jobs:[]\r\n        }\r\n        this.optimizerClicked = this.optimizerClicked.bind(this);\r\n        this.refreshActiveEmployees = this.refreshActiveEmployees.bind(this);\r\n        this.refreshActiveJobs = this.refreshActiveJobs.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshActiveEmployees();\r\n        this.refreshActiveJobs();        \r\n    }\r\n\r\n    refreshActiveEmployees() {\r\n        EmployeeDataService.retrieveAllActiveEmployees()\r\n        .then(\r\n            response => {\r\n                this.setState({apigroup: response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshActiveJobs() {\r\n        OptimizerService.getOptimizer()\r\n        .then(\r\n            response => {\r\n                this.setState({jobs:response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    optimizerClicked() {\r\n        this.state.jobs.map (\r\n            job => {\r\n                const item = {\r\n                    id: job.id,\r\n                    group: job.group,\r\n                    title: job.title,\r\n                    start_time: moment(job.startTime, \"YYYY-MM-DD HH:mm\"),\r\n                    end_time: moment(job.endTime, \"YYYY-MM-DD HH:mm\")\r\n                }\r\n                this.setState(previousState => ({\r\n                    apijob: [...previousState.apijob, item]\r\n                }))\r\n            }\r\n        )\r\n        console.log(\"Finish!\");\r\n    }\r\n\r\n    render() {\r\n        const isAdminLoggedIn = AuthenticationService.isAdminLoggedIn();\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <div className=\"container\">\r\n                    <h3>Employee Scheduling</h3>\r\n                    <Timeline\r\n                        groups={this.state.apigroup}\r\n                        items={this.state.apijob}\r\n                        defaultTimeStart={moment().add(-12, 'hour')}\r\n                        defaultTimeEnd={moment().add(12, 'hour')}\r\n                    />\r\n                    <br/>\r\n                    {isAdminLoggedIn && <button className=\"btn btn-md btn-success\" onClick={this.optimizerClicked}>\r\n                        Optimize\r\n                    </button>}                      \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OptimizerComponent","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AuthenticatedRoute from '../services/AuthenticatedRoute.jsx';\r\nimport LoginComponent from '../views/LoginComponent.jsx';\r\nimport WelcomeComponent from '../views/WelcomeComponent.jsx';\r\nimport ErrorComponent from '../views/ErrorComponent.jsx';\r\nimport LogoutComponent from '../views/LogoutComponent.jsx';\r\nimport ListEmployeeComponent from '../views/ListEmployeeComponent.jsx';\r\nimport EmployeeComponent from '../views/EmployeeComponent.jsx';\r\nimport ListJobComponent from '../views/ListJobComponent.jsx';\r\nimport JobComponent from '../views/JobComponent.jsx';\r\nimport ListShiftComponent from '../views/ListShiftComponent.jsx';\r\nimport ShiftComponent from '../views/ShiftComponent.jsx';\r\nimport ListSkillComponent from '../views/ListSkillComponent.jsx';\r\nimport SkillComponent from '../views/SkillComponent.jsx';\r\nimport ListRoleComponent from '../views/ListRoleComponent.jsx';\r\nimport RoleComponent from '../views/RoleComponent.jsx';\r\nimport ListEmployeeSkillComponent from '../views/ListEmployeeSkillComponent.jsx';\r\nimport EmployeeSkillComponent from '../views/EmployeeSkillComponent.jsx';\r\nimport OptimizerComponent from '../views/OptimizerComponent.jsx';\r\n\r\nclass WorkforceApp extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"TodoApp\">\r\n                <HashRouter basename=\"/\">\r\n                    <>\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={LoginComponent}/>\r\n                            <Route path=\"/login\" component={LoginComponent}/>\r\n                            <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent}/>\r\n                            <AuthenticatedRoute path=\"/employees\" component={ListEmployeeComponent}/>\r\n                            <AuthenticatedRoute path=\"/employee/:id\" component={EmployeeComponent}/>\r\n                            <AuthenticatedRoute path=\"/employeeSkills\" component={ListEmployeeSkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/employeeSkill/:id\" component={EmployeeSkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/jobs\" component={ListJobComponent}/>\r\n                            <AuthenticatedRoute path=\"/job/:id\" component={JobComponent}/>\r\n                            <AuthenticatedRoute path=\"/roles\" component={ListRoleComponent}/>\r\n                            <AuthenticatedRoute path=\"/role/:id\" component={RoleComponent}/>\r\n                            <AuthenticatedRoute path=\"/shifts\" component={ListShiftComponent}/>\r\n                            <AuthenticatedRoute path=\"/shift/:id\" component={ShiftComponent}/>\r\n                            <AuthenticatedRoute path=\"/skills\" component={ListSkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/skill/:id\" component={SkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/optimizer\" component={OptimizerComponent}/>\r\n                            <AuthenticatedRoute path=\"/logout\" component={LogoutComponent}/>\r\n                            <Route path=\"\" component={ErrorComponent}/>\r\n                        </Switch>                        \r\n                    </>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkforceApp;","import React from 'react';\nimport WorkforceApp from '../src/components/views/WorkforceApp.jsx';\nimport './App.css';\nimport './bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorkforceApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}