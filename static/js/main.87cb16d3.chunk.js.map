{"version":3,"sources":["components/services/AuthenticationService.js","components/services/AuthenticatedRoute.jsx","components/services/LoginService.js","components/views/FooterComponentList.jsx","components/views/HeaderComponent.jsx","components/views/LoginComponent.jsx","components/views/FooterComponent.jsx","components/services/OptimizerService.js","components/views/WelcomeComponent.jsx","components/views/ErrorComponent.jsx","components/views/LogoutComponent.jsx","components/services/EmployeeDataService.js","components/views/ListEmployeeComponent.jsx","components/views/EmployeeComponent.jsx","components/services/JobDataService.js","components/views/ListJobComponent.jsx","components/views/JobComponent.jsx","components/services/ShiftDataService.js","components/views/ListShiftComponent.jsx","components/views/ShiftComponent.jsx","components/services/SkillDataService.js","components/views/ListSkillComponent.jsx","components/views/SkillComponent.jsx","components/services/RoleDataService.js","components/views/ListRoleComponent.jsx","components/views/RoleComponent.jsx","components/services/EmployeeSkillService.js","components/views/ListEmployeeSkillComponent.jsx","components/views/EmployeeSkillComponent.jsx","components/views/OptimizerComponent.jsx","components/views/WorkforceApp.jsx","App.js","serviceWorker.js","index.js"],"names":["username","password","role","sessionStorage","setItem","removeItem","getItem","user","AuthenticatedRoute","AuthenticationService","isUserLoggedIn","this","props","to","Component","SERVICE_API","loginData","axios","post","FooterComponentList","className","HeaderComponent","isAdminLoggedIn","getUserLoggedIn","getLoggedInUserName","href","onClick","logout","LoginComponent","state","email","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","LoginService","getLogin","then","resp","console","log","data","registerSuccessfulLogin","history","push","catch","htmlFor","type","id","onChange","FooterComponent","get","WelcomeComponent","pieoptions","chart","xaxis","categories","pieseries","series","chartOptions","labels","refreshJobCategoryCount","refreshJobEmployeeCount","OptimizerService","getJobCategoryCount","response","getJobEmployeeCount","match","params","options","width","ErrorComponent","LogoutComponent","delete","todo","put","ListEmployeeComponent","employees","message","refreshEmployees","deleteEmployeeClicked","updateEmployeeClicked","addEmployeeClicked","EmployeeDataService","retrieveAllEmployees","deleteEmployee","bordered","striped","hover","size","map","employee","key","employeeId","address","roleCode","roleName","employeeStatus","EmployeeComponent","birthPlace","birthDate","gender","phoneNumber","joinDate","resignationDate","onSubmit","validate","retrieveEmployee","moment","format","values","errors","length","nip","createEmployee","updateEmployee","initialValues","validateOnChange","validateOnBlur","enableReinitialize","component","ListJobComponent","jobs","refreshJobs","deleteJobClicked","updateJobClicked","addJobClicked","JobDataService","retrieveAllJobs","deleteJob","job","jobCode","jobDescription","shiftCode","activityDate","startTime","endTime","JobComponent","instance","classCount","retrieveJob","createJob","updateJob","ListShiftComponent","shifts","shiftsCustom","refreshShifts","deleteShiftClicked","updateShiftClicked","addShiftClicked","ShiftDataService","retrieveAllShifts","shift","item","shiftName","previousState","deleteShift","window","location","reload","columns","selector","sortable","left","button","cell","row","pagination","paginationPerPage","paginationRowsPerPageOptions","highlightOnHover","pointerOnHover","ShiftComponent","retrieveShift","createShift","updateShift","ListSkillComponent","skills","skillsCustom","refreshSkills","deleteSkillClicked","updateSkillClicked","addSkillClicked","SkillDataService","retrieveAllSkills","skill","skillCode","skillName","deleteSkill","SkillComponent","retrieveSkill","createSkill","updateSkill","ListRoleComponent","roles","refreshRoles","deleteRoleClicked","updateRoleClicked","addRoleClicked","RoleDataService","retrieveAllRoles","deleteRole","RoleComponent","retrieveRole","createRole","updateRole","employeeSkills","refreshEmployeeSkills","deleteEmployeeSkillClicked","updateEmployeeSkillClicked","addEmployeeSkillClicked","EmployeeSkillService","retrieveAllEmployeeSkills","deleteEmployeeSkill","employeeSkill","EmployeeSkillComponent","retrieveEmployeeSkill","skiilCode","createEmployeeSkill","updateEmployeeSkill","OptimizerComponent","apigroup","apijob","jobCount","optimizerClicked","refreshActiveEmployees","refreshActiveJobs","refreshJobCount","retrieveAllActiveEmployees","getOptimizer","getJobCount","group","title","start_time","end_time","groups","items","defaultTimeStart","add","defaultTimeEnd","employeeName","WorkforceApp","basename","path","exact","ListEmployeeSkillComponent","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87cb16d3.chunk.js","sourcesContent":["class AuthenticationService {\r\n    registerSuccessfulLogin(username, password, role) {\r\n        sessionStorage.setItem('authenticatedUser', username);\r\n        sessionStorage.setItem('authenticatedRole', role);\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(user === null) return false\r\n        return true\r\n    }\r\n\r\n    isAdminLoggedIn() {\r\n        let role = sessionStorage.getItem('authenticatedRole')\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(role === \"KBG\" && user !== null) return true\r\n        return false\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(user === null) {\r\n            return ''\r\n        } else {\r\n            return user\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nclass AuthenticatedRoute extends Component {\r\n    render() {\r\n        if(AuthenticationService.isUserLoggedIn()) {\r\n            return <Route {...this.props}/>\r\n        } else {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}`;\r\n\r\nclass LoginService {\r\n    getLogin(loginData) {\r\n        return axios.post(`${SERVICE_API}/login`, loginData);\r\n    }\r\n}\r\n\r\nexport default new LoginService();","import React, {Component} from 'react';\r\n\r\nclass FooterComponentList extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer-list\">\r\n                <span className=\"text-muted\">All Right Reserved 2019 @Workforce Management Team</span>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponentList","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\n\r\nclass HeaderComponent extends Component {\r\n    render() {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        const isAdminLoggedIn = AuthenticationService.isAdminLoggedIn();\r\n        const getUserLoggedIn = AuthenticationService.getLoggedInUserName();\r\n\r\n        return(\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"https://raharja.ac.id/\" className=\"navbar-brand\">Workforce Management</a></div>\r\n                    <ul className=\"navbar-nav\"> \r\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to={\"/welcome/\" + getUserLoggedIn}>Home</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/employees\">Employee</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/employeeSkills\">Employee Skill</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/roles\">Role</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/jobs\">Job</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/shifts\">Shift</Link></li>}\r\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/skills\">Skill</Link></li>}\r\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/optimizer\">Optimizer</Link></li>}\r\n                    </ul>\r\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n                        {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\r\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\nimport LoginService from '../services/LoginService.js';\r\nimport './LoginComponent.css';\r\nimport FooterComponentList from '../views/FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            role:'',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.name]:event.target.value})\r\n    }\r\n\r\n    loginClicked() {\r\n        LoginService.getLogin({\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        })\r\n        .then((resp) => {\r\n            console.log(\"Success Login: \" + resp.data[1])\r\n            if(resp.data[0]) {\r\n                AuthenticationService.registerSuccessfulLogin(resp.data[1], this.state.password, resp.data[2]);\r\n                this.props.history.push(`welcome/${resp.data[1]}`)\r\n            } else {\r\n                if(this.state.email === \"fitri.andriyani\" && this.state.password === \"keepsecret\") {\r\n                    console.log(\"Success Login Admin\")\r\n                    AuthenticationService.registerSuccessfulLogin(this.state.email, this.state.password, \"KBG\");\r\n                    this.props.history.push(`welcome/${this.state.email}`)\r\n                } else {\r\n                    console.log(\"Failed Login\")\r\n                    this.setState({showSuccessMessage:false})\r\n                    this.setState({hasLoginFailed:true})\r\n                }                \r\n            }            \r\n        })\r\n        .catch(() => {\r\n            console.log(\"Catch Success Login\")\r\n            if(this.state.email === \"fitri.andriyani\" && this.state.password === \"keepsecret\") {\r\n                console.log(\"Success Login Admin\")\r\n                AuthenticationService.registerSuccessfulLogin(this.state.email, this.state.password, \"KBG\");\r\n                this.props.history.push(`welcome/${this.state.email}`)\r\n            } else {\r\n                console.log(\"Failed Login\")\r\n                this.setState({showSuccessMessage:false})\r\n                this.setState({hasLoginFailed:true})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <HeaderComponent/>\r\n            <div className=\"row\">                \r\n                <div className=\"col-md-4\">\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-primary\">Invalid Credentials</div>}\r\n                    <div className=\"container-gray\">\r\n                        <div className=\"col login-sec\">\r\n                            <h2 className=\"text-center\">Sign In</h2>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"usr\">Email:</label>\r\n                                    <input type=\"text\" id=\"usr\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"pwd\">Password:</label>\r\n                                    <input type=\"password\" id=\"pwd\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                                    <br/>\r\n                                    <button className=\"btn btn-primary\" onClick={this.loginClicked}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent","import React, {Component} from 'react';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer\">\r\n                <span className=\"text-muted\">All Right Reserved 2019 @Workforce Management Team</span>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}`;\r\n\r\nclass OptimizerService {\r\n    getOptimizer() {\r\n        return axios.get(`${SERVICE_API}/optimizer`);\r\n    }\r\n\r\n    getJobCount() {\r\n        return axios.get(`${SERVICE_API}/job-count`);\r\n    }\r\n\r\n    getJobCategoryCount() {\r\n        return axios.get(`${SERVICE_API}/job-category-count`);\r\n    }\r\n\r\n    getJobEmployeeCount() {\r\n        return axios.get(`${SERVICE_API}/job-employee-count`);\r\n    }\r\n}\r\n\r\nexport default new OptimizerService();","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\nimport Chart from \"react-apexcharts\";\r\nimport OptimizerService from '../services/OptimizerService.js';\r\n\r\nclass WelcomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            pieoptions: {\r\n                chart: {\r\n                    id: \"basic-line\"\r\n                },\r\n                xaxis: {\r\n                    categories: [\"Dede\", \"Yang Mi\", \"Nurrahma\", \"Yunita\", \"Ayu\", \"Vena\", \"Nasya\"]\r\n                }\r\n            },\r\n            pieseries: [\r\n                {\r\n                    name: \"series\",\r\n                    data: [45, 50, 49, 60, 70, 91, 50]\r\n                }\r\n            ],\r\n            series: [],\r\n            chartOptions: {\r\n                labels: ['Follow Up', 'Promosi', 'Stand By']\r\n            }\r\n        }\r\n        this.refreshJobCategoryCount = this.refreshJobCategoryCount.bind(this);\r\n        this.refreshJobEmployeeCount = this.refreshJobEmployeeCount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshJobCategoryCount();\r\n        this.refreshJobEmployeeCount(); \r\n    }\r\n\r\n    refreshJobCategoryCount() {\r\n        OptimizerService.getJobCategoryCount()\r\n        .then(\r\n            response => {\r\n                this.setState({series:response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshJobEmployeeCount() {\r\n        OptimizerService.getJobEmployeeCount()\r\n        .then(\r\n            response => {\r\n                this.setState({pieseries:response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <HeaderComponent/>\r\n                <Jumbotron>\r\n                    {<h1>Welcome {this.props.match.params.name}</h1>}\r\n                    <p>\r\n                        This is a workforce management application, You can manage your employees <Link to=\"/employees\">here</Link>.\r\n                    </p>\r\n                    <p>\r\n                        You can manage job for your employees <Link to=\"/jobs\">here</Link>.\r\n                    </p>\r\n                </Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Chart options={this.state.chartOptions} series={this.state.series} type=\"pie\" width=\"400\" />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Chart\r\n                                options={this.state.pieoptions}\r\n                                series={this.state.pieseries}\r\n                                type=\"line\"\r\n                                width=\"500\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n                <hr/>\r\n                <FooterComponent/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WelcomeComponent","import React from 'react';\r\n\r\nfunction ErrorComponent() {\r\n    return <div>An errror occured!</div>\r\n}\r\n\r\nexport default ErrorComponent","import React, {Component} from 'react';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass LogoutComponent extends Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <HeaderComponent/>\r\n                <h1>You are logged out</h1>\r\n                <div className=\"container\">\r\n                    Thank Your for Using Our Application\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogoutComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/employees`;\r\n\r\nclass EmployeeDataService {\r\n    retrieveAllEmployees(name) {\r\n        return axios.get(`${SERVICE_API}/list`,);\r\n    }\r\n    retrieveAllActiveEmployees() {\r\n        return axios.get(`${SERVICE_API}/list/active`,);\r\n    }\r\n    deleteEmployee(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveEmployee(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateEmployee(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createEmployee(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new EmployeeDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport EmployeeDataService from '../services/EmployeeDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employees: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshEmployees = this.refreshEmployees.bind(this);\r\n        this.deleteEmployeeClicked = this.deleteEmployeeClicked.bind(this);\r\n        this.updateEmployeeClicked = this.updateEmployeeClicked.bind(this);\r\n        this.addEmployeeClicked = this.addEmployeeClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshEmployees();\r\n    }\r\n\r\n    refreshEmployees() {\r\n        EmployeeDataService.retrieveAllEmployees(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({employees: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteEmployeeClicked(id, name) {\r\n        EmployeeDataService.deleteEmployee(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of employee ${name} Successful`})\r\n                    this.refreshEmployees()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateEmployeeClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/employee/${id}`)\r\n    }\r\n\r\n    addEmployeeClicked() {\r\n        this.props.history.push('/employee/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Employee</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee ID</th>\r\n                                <th>Name</th>\r\n                                <th>Username</th>\r\n                                <th>Address</th>\r\n                                <th>Email</th>\r\n                                <th>Role</th>\r\n                                <th>Status</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employees.map (\r\n                                    employee => \r\n                                    <tr key={employee.employeeId}>\r\n                                        <td>{employee.employeeId}</td>\r\n                                        <td>{employee.name}</td>\r\n                                        <td>{employee.username}</td>\r\n                                        <td>{employee.address}</td>\r\n                                        <td>{employee.email}</td>\r\n                                        <td>{employee.roleCode.roleName}</td>\r\n                                        <td>{employee.employeeStatus}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateEmployeeClicked(employee.employeeId)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteEmployeeClicked(employee.employeeId, employee.name)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addEmployeeClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport EmployeeDataService from '../services/EmployeeDataService.js';\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass EmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employeeId: '',\r\n            name: '',\r\n            username: '',\r\n            password: '',\r\n            birthPlace: '',\r\n            birthDate: '',\r\n            address: '',\r\n            gender: '',\r\n            phoneNumber: '',\r\n            email: '',\r\n            joinDate: '',\r\n            resignationDate: '',\r\n            employeeStatus: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        EmployeeDataService.retrieveEmployee(this.state.id)\r\n        .then(response => this.setState({\r\n            employeeId:response.data.employeeId,\r\n            name:response.data.name,\r\n            username:response.data.username,\r\n            password:response.data.password,\r\n            birthPlace:response.data.birthPlace,\r\n            birthDate:moment(response.data.birthDate).format('YYYY-MM-DD'),\r\n            address:response.data.address,\r\n            gender:response.data.gender,\r\n            phoneNumber:response.data.phoneNumber,\r\n            email:response.data.email,\r\n            joinDate:moment(response.data.joinDate).format('YYYY-MM-DD'),\r\n            resignationDate:moment(response.data.resignationDate).format('YYYY-MM-DD'),\r\n            employeeStatus:response.data.employeeStatus\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.name) {\r\n            errors.name = 'Enter an employee name'           \r\n        } else if(values.name.length < 4) {\r\n            errors.name = 'Enter at least 4 characters for employee name'\r\n        }\r\n\r\n        if(!values.username) {\r\n            errors.nip = 'Enter a NIP'           \r\n        } else if(values.nip.length < 4) {\r\n            errors.nip = 'Enter at least 4 characters for employee username'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            EmployeeDataService.createEmployee({\r\n                employeeId:values.employeeId,\r\n                name:values.name,\r\n                username:values.username,\r\n                password:values.password,\r\n                birthPlace:values.birthPlace,\r\n                birthDate:values.birthDate,\r\n                address:values.address,\r\n                gender:values.gender,\r\n                phoneNumber:values.phoneNumber,\r\n                email:values.email,\r\n                joinDate:values.joinDate,\r\n                resignationDate:'',\r\n                employeeStatus:values.employeeStatus,\r\n                roleCode:values.roleCode\r\n            }).then(() => this.props.history.push('/employees'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            EmployeeDataService.updateEmployee(this.state.id, {\r\n                employeeId:values.employeeId,\r\n                name:values.name,\r\n                username:values.username,\r\n                password:values.password,\r\n                birthPlace:values.birthPlace,\r\n                birthDate:values.birthDate,\r\n                address:values.address,\r\n                gender:values.gender,\r\n                phoneNumber:values.phoneNumber,\r\n                email:values.email,\r\n                joinDate:values.joinDate,\r\n                resignationDate:'',\r\n                employeeStatus:values.employeeStatus,\r\n                roleCode:values.roleCode\r\n            }).then(() => this.props.history.push('/employees'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {employeeId, name, username, password, birthPlace, birthDate, address, gender, phoneNumber, email, joinDate, resignationDate, employeeStatus, roleCode} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Employee Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <Formik \r\n                                initialValues={{employeeId, name, username, password, birthPlace, birthDate, address, gender, phoneNumber, email, joinDate, resignationDate, employeeStatus, roleCode}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"name\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"username\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Employee ID</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"employeeId\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Name</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"name\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Username</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"username\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Password</label>\r\n                                                        <Field className=\"form-control\" type=\"password\" name=\"password\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Birth Place</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"birthPlace\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Birth Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"birthDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Address</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"address\"/>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">                                            \r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Gender</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"gender\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Phone Number</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"phoneNumber\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Email</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"email\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Join Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"joinDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Resignation Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"resignationDate\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Employee Status</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"employeeStatus\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Role</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"roleCode\"/>\r\n                                                    </fieldset>\r\n                                                </div>                                                \r\n                                            </div>                                            \r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>                                            \r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <br/>\r\n                <FooterComponent/>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/jobs`;\r\n\r\nclass JobDataService {\r\n    retrieveAllJobs(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteJob(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveJob(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateJob(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createJob(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new JobDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport JobDataService from '../services/JobDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListJobComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jobs: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshJobs = this.refreshJobs.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this);\r\n        this.updateJobClicked = this.updateJobClicked.bind(this);\r\n        this.addJobClicked = this.addJobClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshJobs();\r\n    }\r\n\r\n    refreshJobs() {\r\n        JobDataService.retrieveAllJobs(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({jobs: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteJobClicked(id, name) {\r\n        JobDataService.deleteJob(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of job ${name} Successful`})\r\n                    this.refreshJobs()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateJobClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/job/${id}`)\r\n    }\r\n\r\n    addJobClicked() {\r\n        this.props.history.push('/job/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Job</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Job Code</th>\r\n                                <th>Job Description</th>\r\n                                <th>Shift</th>\r\n                                <th>Activity Date</th>\r\n                                <th>Start</th>\r\n                                <th>End</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.jobs.map (\r\n                                    job => \r\n                                    <tr key={job.jobCode}>\r\n                                        <td>{job.jobCode}</td>\r\n                                        <td>{job.jobDescription}</td>\r\n                                        <td>{job.shiftCode}</td>\r\n                                        <td>{job.activityDate}</td>\r\n                                        <td>{job.startTime}</td>\r\n                                        <td>{job.endTime}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateJobClicked(job.jobCode)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteJobClicked(job.jobCode, job.jobCode)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addJobClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListJobComponent","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport JobDataService from '../services/JobDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass JobComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            jobCode: '',\r\n            jobDescription: '',\r\n            shiftCode: '',\r\n            activityDate: '',\r\n            instance: '',\r\n            classCount: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            employeeId: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        JobDataService.retrieveJob(this.state.id)\r\n        .then(response => this.setState({\r\n            jobCode:response.data.jobCode,\r\n            jobDescription:response.data.jobDescription,\r\n            shiftCode:response.data.shiftCode,\r\n            activityDate:moment(response.data.activityDate).format('YYYY-MM-DD'),\r\n            instance:response.data.instance,\r\n            classCount:response.data.classCount,\r\n            startTime:response.data.startTime,\r\n            endTime:response.data.endTime,\r\n            employeeId:response.data.employeeId\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.jobDescription) {\r\n            errors.jobDescription = 'Enter a job description'           \r\n        } else if(values.jobDescription.length < 7) {\r\n            errors.jobDescription = 'Enter at least 7 characters for job description'\r\n        }\r\n\r\n        if(!values.jobCode) {\r\n            errors.jobCode = 'Enter a job code'           \r\n        } else if(values.jobCode.length < 1) {\r\n            errors.jobCode = 'Enter at least 1 characters for job code'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            JobDataService.createJob({\r\n                jobCode:values.jobCode,\r\n                jobDescription:values.jobDescription,\r\n                shiftCode:values.shiftCode,\r\n                activityDate:values.activityDate,\r\n                instance:values.instance,\r\n                classCount:values.classCount,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime,\r\n                employeeId:values.employeeId\r\n            }).then(() => this.props.history.push('/jobs'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            JobDataService.updateJob(this.state.id, {\r\n                jobCode:values.jobCode,\r\n                jobDescription:values.jobDescription,\r\n                shiftCode:values.shiftCode,\r\n                activityDate:values.activityDate,\r\n                instance:values.instance,\r\n                classCount:values.classCount,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime,\r\n                employeeId:values.employeeId\r\n            }).then(() => this.props.history.push('/jobs'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {jobCode, jobDescription, shiftCode, activityDate, instance, classCount, startTime, endTime, employeeId} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Job Form</h4>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <Formik \r\n                                initialValues={{jobCode, jobDescription, shiftCode, activityDate, instance, classCount, startTime, endTime, employeeId}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"jobDescription\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"jobCode\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Job Code</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"jobCode\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Job Description</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"jobDescription\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Shift Code</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"shiftCode\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Activity Date</label>\r\n                                                        <Field className=\"form-control\" type=\"date\" name=\"activityDate\"/>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Instance</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"instance\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Class Count</label>\r\n                                                        <Field className=\"form-control\" type=\"text\" name=\"classCount\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>Start Time</label>\r\n                                                        <Field className=\"form-control\" type=\"time\" name=\"startTime\"/>\r\n                                                    </fieldset>\r\n                                                    <fieldset className=\"form-group\">\r\n                                                        <label>End Time</label>\r\n                                                        <Field className=\"form-control\" type=\"time\" name=\"endTime\"/>\r\n                                                    </fieldset>\r\n                                                </div>\r\n                                            </div>                                                                              \r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <br/>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/shifts`;\r\n\r\nclass ShiftDataService {\r\n    retrieveAllShifts(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteShift(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveShift(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateShift(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createShift(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new ShiftDataService();","import React, {Component} from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport ShiftDataService from '../services/ShiftDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListShiftComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            shifts: [],\r\n            shiftsCustom: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshShifts = this.refreshShifts.bind(this);\r\n        this.deleteShiftClicked = this.deleteShiftClicked.bind(this);\r\n        this.updateShiftClicked = this.updateShiftClicked.bind(this);\r\n        this.addShiftClicked = this.addShiftClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshShifts();\r\n    }\r\n\r\n    refreshShifts() {\r\n        ShiftDataService.retrieveAllShifts(\"name\")\r\n            .then(response =>\r\n                response.data.map(\r\n                    shift => {\r\n                        const item = {\r\n                            id: shift.shiftCode,\r\n                            shiftCode: shift.shiftCode,\r\n                            shiftName: shift.shiftName,\r\n                            startTime: shift.startTime,\r\n                            endTime: shift.endTime,\r\n                        }\r\n                        this.setState(previousState => ({\r\n                            shiftsCustom: [...previousState.shiftsCustom, item]\r\n                        }))\r\n                    }\r\n                )\r\n            )\r\n    }\r\n\r\n    deleteShiftClicked(id, name) {\r\n        ShiftDataService.deleteShift(id)\r\n            .then(\r\n                window.location.reload()                \r\n            )\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of shift successful`})\r\n                }\r\n            )\r\n    }\r\n\r\n    updateShiftClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/shift/${id}`)\r\n    }\r\n\r\n    addShiftClicked() {\r\n        this.props.history.push('/shift/-1')\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                name: 'Shift Code',\r\n                selector: 'shiftCode',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Shift Name',\r\n                selector: 'shiftName',\r\n                sortable: false,\r\n                left: true,\r\n            },\r\n            {\r\n                name: 'Start Time',\r\n                selector: 'startTime',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'End Time',\r\n                selector: 'endTime',\r\n                sortable: false,\r\n                left: true,\r\n            },\r\n            {\r\n                name: 'Update',\r\n                button: true,\r\n                cell: row => <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateShiftClicked(row.id)}>Update</button></td>,\r\n            },\r\n            {\r\n                name: 'Delete',\r\n                button: true,\r\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteShiftClicked(row.id)}>Delete</button>,\r\n            },\r\n        ];\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <br/>\r\n                    <h5>Shift List</h5>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={this.state.shiftsCustom}\r\n                        pagination\r\n                        paginationPerPage={5}\r\n                        paginationRowsPerPageOptions={[5]}\r\n                        highlightOnHover\r\n                        pointerOnHover\r\n                    />\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addShiftClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListShiftComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport ShiftDataService from '../services/ShiftDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ShiftComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            shiftCode: '',\r\n            shiftName: '',\r\n            startTime: '',\r\n            endTime: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        ShiftDataService.retrieveShift(this.state.id)\r\n        .then(response => this.setState({\r\n            shiftCode:response.data.shiftCode,\r\n            shiftName:response.data.shiftName,\r\n            startTime:response.data.startTime,\r\n            endTime:response.data.endTime\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.shiftCode) {\r\n            errors.shiftCode = 'Enter a shift code'           \r\n        } else if(values.shiftCode.length < 1) {\r\n            errors.shiftCode = 'Enter at least 1 characters for shift code'\r\n        }\r\n\r\n        if(!values.shiftName) {\r\n            errors.shiftName = 'Enter a shift name'           \r\n        } else if(values.shiftName.length < 4) {\r\n            errors.shiftName = 'Enter at least 4 characters for shift name'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            ShiftDataService.createShift({\r\n                shiftCode:values.shiftCode,\r\n                shiftName:values.shiftName,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime\r\n            }).then(() => this.props.history.push('/shifts'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            ShiftDataService.updateShift(this.state.id, {\r\n                shiftCode:values.shiftCode,\r\n                shiftName:values.shiftName,\r\n                startTime:values.startTime,\r\n                endTime:values.endTime\r\n            }).then(() => this.props.history.push('/shifts'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {shiftCode, shiftName, startTime, endTime} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Shift Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{shiftCode, shiftName, startTime, endTime}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"shiftCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"shiftName\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Shift Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"shiftCode\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Shift Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"shiftName\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Start Time</label>\r\n                                                <Field className=\"form-control\" type=\"time\" name=\"startTime\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>End Time</label>\r\n                                                <Field className=\"form-control\" type=\"time\" name=\"endTime\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/skills`;\r\n\r\nclass SkillDataService {\r\n    retrieveAllSkills(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteSkill(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveSkill(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateSkill(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createSkill(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new SkillDataService();","import React, {Component} from 'react';\r\nimport SkillDataService from '../services/SkillDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nclass ListSkillComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            skills: [],\r\n            skillsCustom: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshSkills = this.refreshSkills.bind(this);\r\n        this.deleteSkillClicked = this.deleteSkillClicked.bind(this);\r\n        this.updateSkillClicked = this.updateSkillClicked.bind(this);\r\n        this.addSkillClicked = this.addSkillClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshSkills();\r\n    }\r\n\r\n    refreshSkills() {\r\n        SkillDataService.retrieveAllSkills(\"name\")\r\n            .then(response =>\r\n                response.data.map(\r\n                    skill => {\r\n                        const item = {\r\n                            id: skill.skillCode,\r\n                            skillCode: skill.skillCode,\r\n                            skillName: skill.skillName,\r\n                        }\r\n                        this.setState(previousState => ({\r\n                            skillsCustom: [...previousState.skillsCustom, item]\r\n                        }))\r\n                    }\r\n                )\r\n            )\r\n    }\r\n\r\n    deleteSkillClicked(id, name) {\r\n        SkillDataService.deleteSkill(id)\r\n            .then(\r\n                window.location.reload()                \r\n            )\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of skill successful`})\r\n                }\r\n            )\r\n    }\r\n\r\n    updateSkillClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/skill/${id}`)\r\n    }\r\n\r\n    addSkillClicked() {\r\n        this.props.history.push('/skill/-1')\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                name: 'Skill Code',\r\n                selector: 'skillCode',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Skill Name',\r\n                selector: 'skillName',\r\n                sortable: false,\r\n                left: true,\r\n            },\r\n            {\r\n                name: 'Update',\r\n                button: true,\r\n                cell: row => <button className=\"btn btn-sm btn-info\" onClick={() => this.updateSkillClicked(row.id)}>Update</button>,\r\n            },\r\n            {\r\n                name: 'Delete',\r\n                button: true,\r\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteSkillClicked(row.id)}>Delete</button>,\r\n            },\r\n        ];\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <br/>\r\n                    <h5>Skill List</h5>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={this.state.skillsCustom}\r\n                        pagination\r\n                        paginationPerPage={5}\r\n                        paginationRowsPerPageOptions={[5]}\r\n                        highlightOnHover\r\n                        pointerOnHover\r\n                    />\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addSkillClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListSkillComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport SkillDataService from '../services/SkillDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass SkillComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            skillCode: '',\r\n            skillName: ''        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        SkillDataService.retrieveSkill(this.state.id)\r\n        .then(response => this.setState({\r\n            skillCode:response.data.skillCode,\r\n            skillName:response.data.skillName\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.skillCode) {\r\n            errors.skillCode = 'Enter a skill code'           \r\n        } else if(values.skillCode.length < 1) {\r\n            errors.skillCode = 'Enter at least 1 characters for skill code'\r\n        }\r\n\r\n        if(!values.skillName) {\r\n            errors.skillName = 'Enter a skill name'           \r\n        } else if(values.skillName.length < 4) {\r\n            errors.skillName = 'Enter at least 4 characters for skill name'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            SkillDataService.createSkill({\r\n                skillCode:values.skillCode,\r\n                skillName:values.skillName\r\n            }).then(() => this.props.history.push('/skills'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            SkillDataService.updateSkill(this.state.id, {\r\n                skillCode:values.skillCode,\r\n                skillName:values.skillName\r\n            }).then(() => this.props.history.push('/skills'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {skillCode, skillName} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Skill Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{skillCode, skillName}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"skillCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"skillName\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Skill Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillCode\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Skill Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillName\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/roles`;\r\n\r\nclass RoleDataService {\r\n    retrieveAllRoles(name) {\r\n        return axios.get(`${SERVICE_API}/list`);\r\n    }\r\n    deleteRole(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveRole(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateRole(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createRole(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new RoleDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport RoleDataService from '../services/RoleDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListRoleComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            roles: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshRoles = this.refreshRoles.bind(this);\r\n        this.deleteRoleClicked = this.deleteRoleClicked.bind(this);\r\n        this.updateRoleClicked = this.updateRoleClicked.bind(this);\r\n        this.addRoleClicked = this.addRoleClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshRoles();\r\n    }\r\n\r\n    refreshRoles() {\r\n        RoleDataService.retrieveAllRoles(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({roles: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteRoleClicked(id, name) {\r\n        RoleDataService.deleteRole(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of role ${name} Successful`})\r\n                    this.refreshRoles()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateRoleClicked(id) {\r\n        console.log(\"Update: \" + id)\r\n        this.props.history.push(`/role/${id}`)\r\n    }\r\n\r\n    addRoleClicked() {\r\n        this.props.history.push('/role/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Role</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Role Code</th>\r\n                                <th>Role Name</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.roles.map (\r\n                                    role => \r\n                                    <tr key={role.roleCode}>\r\n                                        <td>{role.roleCode}</td>\r\n                                        <td>{role.roleName}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateRoleClicked(role.roleCode)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteRoleClicked(role.roleCode, role.roleName)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addRoleClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListRoleComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport RoleDataService from '../services/RoleDataService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass RoleComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            roleCode: '',\r\n            roleName: ''        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        RoleDataService.retrieveRole(this.state.id)\r\n        .then(response => this.setState({\r\n            roleCode:response.data.roleCode,\r\n            roleName:response.data.roleName\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.roleCode) {\r\n            errors.roleCode = 'Enter a role code'           \r\n        } else if(values.roleCode.length < 1) {\r\n            errors.roleCode = 'Enter at least 1 characters for role code'\r\n        }\r\n\r\n        if(!values.roleName) {\r\n            errors.roleName = 'Enter a role name'           \r\n        } else if(values.roleName.length < 4) {\r\n            errors.roleName = 'Enter at least 4 characters for role name'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            RoleDataService.createRole({\r\n                roleCode:values.roleCode,\r\n                roleName:values.roleName\r\n            }).then(() => this.props.history.push('/roles'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            RoleDataService.updateRole(this.state.id, {\r\n                roleCode:values.roleCode,\r\n                roleName:values.roleName\r\n            }).then(() => this.props.history.push('/roles'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {roleCode, roleName} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Role Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{roleCode, roleName}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"roleCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"roleName\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Role Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"roleCode\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Role Name</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"roleName\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoleComponent","import axios from 'axios';\r\n\r\nconst HOST_API = 'https://workforce-app.herokuapp.com';\r\nconst SERVICE_API = `${HOST_API}/employeeSkills`;\r\n\r\nclass EmployeeDataService {\r\n    retrieveAllEmployeeSkills(name) {\r\n        return axios.get(`${SERVICE_API}/list`,);\r\n    }\r\n    deleteEmployeeSkill(id) {\r\n        return axios.delete(`${SERVICE_API}/${id}`);\r\n    }\r\n    retrieveEmployeeSkill(id) {\r\n        return axios.get(`${SERVICE_API}/${id}`);\r\n    }\r\n    updateEmployeeSkill(id, todo) {\r\n        return axios.put(`${SERVICE_API}/${id}`, todo);\r\n    }\r\n    createEmployeeSkill(todo) {\r\n        return axios.post(`${SERVICE_API}`, todo);\r\n    }\r\n}\r\n\r\nexport default new EmployeeDataService();","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport EmployeeSkillService from '../services/EmployeeSkillService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employeeSkills: [],\r\n            message:\"\"\r\n        }\r\n        this.refreshEmployeeSkills = this.refreshEmployeeSkills.bind(this);\r\n        this.deleteEmployeeSkillClicked = this.deleteEmployeeSkillClicked.bind(this);\r\n        this.updateEmployeeSkillClicked = this.updateEmployeeSkillClicked.bind(this);\r\n        this.addEmployeeSkillClicked = this.addEmployeeSkillClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshEmployeeSkills();\r\n    }\r\n\r\n    refreshEmployeeSkills() {\r\n        EmployeeSkillService.retrieveAllEmployeeSkills(\"name\")\r\n            .then(\r\n                response => {\r\n                    this.setState({employeeSkills: response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteEmployeeSkillClicked(id, name) {\r\n        EmployeeSkillService.deleteEmployeeSkill(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({message: `Delete of employee skill ${name} Successful`})\r\n                    this.refreshEmployeeSkills()\r\n                }\r\n            )\r\n    }\r\n\r\n    updateEmployeeSkillClicked(id) {\r\n        this.props.history.push(`/employeeSkill/${id}`)\r\n    }\r\n\r\n    addEmployeeSkillClicked() {\r\n        this.props.history.push('/employeeSkill/-1')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h3>List Employee Skill</h3>\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                <div className=\"container\">\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee Name</th>\r\n                                <th>Skill</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employeeSkills.map (\r\n                                    employeeSkill => \r\n                                    <tr key={employeeSkill.id}>\r\n                                        <td>{employeeSkill.employeeId}</td>\r\n                                        <td>{employeeSkill.skillCode}</td>\r\n                                        <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateEmployeeSkillClicked(employeeSkill.id)}>Update</button></td>\r\n                                        <td><button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteEmployeeSkillClicked(employeeSkill.id, employeeSkill.id)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-info\" onClick={() => this.addEmployeeSkillClicked()}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent","import React, {Component} from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport EmployeeSkillService from '../services/EmployeeSkillService.js';\r\nimport FooterComponentList from './FooterComponentList.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\n\r\nclass EmployeeSkillComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employeeId: '',\r\n            skillCode: ''        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id === -1) {\r\n            return\r\n        }\r\n\r\n        EmployeeSkillService.retrieveEmployeeSkill(this.state.id)\r\n        .then(response => this.setState({\r\n            employeeId:response.data.employeeId,\r\n            skillCode:response.data.skillCode\r\n        }))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        \r\n        if(!values.employeeId) {\r\n            errors.employeeId = 'Enter an employee ID'           \r\n        } else if(values.employeeId.length < 1) {\r\n            errors.employeeId = 'Enter at least 1 characters for employee ID'\r\n        }\r\n\r\n        if(!values.skillCode) {\r\n            errors.skiilCode = 'Enter a skill code'           \r\n        } else if(values.skillCode.length < 1) {\r\n            errors.skillCode = 'Enter at least 1 characters for skill code'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"Here\")\r\n        if(this.state.id === '-1') {\r\n            console.log(\"Create\")\r\n            EmployeeSkillService.createEmployeeSkill({\r\n                employeeId:values.employeeId,\r\n                skillCode:values.skillCode\r\n            }).then(() => this.props.history.push('/employeeSkills'))\r\n        } else {\r\n            console.log(\"Update\")\r\n            EmployeeSkillService.updateEmployeeSkill(this.state.id, {\r\n                employeeId:values.employeeId,\r\n                skillCode:values.skillCode\r\n            }).then(() => this.props.history.push('/employeeSkills'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {employeeId, skillCode} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <h4>New Employee Skill Form</h4>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Formik \r\n                                initialValues={{employeeId, skillCode}}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            <ErrorMessage name=\"employeeId\" component=\"div\" className=\"alert alert-warning\"/>                                            \r\n                                            <ErrorMessage name=\"skillCode\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Employee ID</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"employeeId\"/>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Skill Code</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillCode\"/>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                        </Form>\r\n                                    )                        \r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n                <FooterComponentList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeSkillComponent","import React, { Component } from \"react\";\r\nimport Timeline from 'react-calendar-timeline';\r\nimport 'react-calendar-timeline/lib/Timeline.css';\r\nimport moment from 'moment'\r\nimport FooterComponent from './FooterComponent.jsx';\r\nimport HeaderComponent from '../views/HeaderComponent.jsx';\r\nimport AuthenticationService from '../services/AuthenticationService.js';\r\nimport EmployeeDataService from '../services/EmployeeDataService.js';\r\nimport OptimizerService from '../services/OptimizerService.js';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass OptimizerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            apigroup: [],\r\n            apijob: [],\r\n            jobs:[],\r\n            jobCount: [],\r\n        }\r\n        this.optimizerClicked = this.optimizerClicked.bind(this);\r\n        this.refreshActiveEmployees = this.refreshActiveEmployees.bind(this);\r\n        this.refreshActiveJobs = this.refreshActiveJobs.bind(this);\r\n        this.refreshJobCount = this.refreshJobCount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshActiveEmployees();\r\n        this.refreshActiveJobs(); \r\n        this.refreshJobCount();       \r\n    }\r\n\r\n    refreshActiveEmployees() {\r\n        EmployeeDataService.retrieveAllActiveEmployees()\r\n        .then(\r\n            response => {\r\n                this.setState({apigroup: response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshActiveJobs() {\r\n        OptimizerService.getOptimizer()\r\n        .then(\r\n            response => {\r\n                this.setState({jobs:response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshJobCount() {\r\n        OptimizerService.getJobCount()\r\n        .then(\r\n            response => {\r\n                this.setState({jobCount:response.data})\r\n            }\r\n        )\r\n    }\r\n\r\n    optimizerClicked() {\r\n        this.state.jobs.map (\r\n            job => {\r\n                const item = {\r\n                    id: job.id,\r\n                    group: job.group,\r\n                    title: job.title,\r\n                    start_time: moment(job.startTime, \"YYYY-MM-DD HH:mm\"),\r\n                    end_time: moment(job.endTime, \"YYYY-MM-DD HH:mm\")\r\n                }\r\n                this.setState(previousState => ({\r\n                    apijob: [...previousState.apijob, item]\r\n                }))\r\n            }\r\n        )\r\n        console.log(\"Finish!\");\r\n    }\r\n\r\n    render() {\r\n        const isAdminLoggedIn = AuthenticationService.isAdminLoggedIn();\r\n\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                <div className=\"container\">\r\n                    <h3>Employee Scheduling</h3>\r\n                    <Timeline\r\n                        groups={this.state.apigroup}\r\n                        items={this.state.apijob}\r\n                        defaultTimeStart={moment().add(-12, 'hour')}\r\n                        defaultTimeEnd={moment().add(12, 'hour')}\r\n                    />\r\n                    <br/>\r\n                    {isAdminLoggedIn && <button className=\"btn btn-md btn-success\" onClick={this.optimizerClicked}>\r\n                        Optimize\r\n                    </button>}\r\n                    <Table bordered striped hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee Name</th>\r\n                                <th>Total Assignment</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.jobCount.map (\r\n                                    jobCount => \r\n                                    <tr key={jobCount.employeeName}>\r\n                                        <td>{jobCount.employeeName}</td>\r\n                                        <td>{jobCount.jobCount}</td>\r\n                                    </tr>\r\n                                )\r\n                            }                        \r\n                        </tbody>\r\n                    </Table>                      \r\n                </div>\r\n                <FooterComponent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OptimizerComponent","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AuthenticatedRoute from '../services/AuthenticatedRoute.jsx';\r\nimport LoginComponent from '../views/LoginComponent.jsx';\r\nimport WelcomeComponent from '../views/WelcomeComponent.jsx';\r\nimport ErrorComponent from '../views/ErrorComponent.jsx';\r\nimport LogoutComponent from '../views/LogoutComponent.jsx';\r\nimport ListEmployeeComponent from '../views/ListEmployeeComponent.jsx';\r\nimport EmployeeComponent from '../views/EmployeeComponent.jsx';\r\nimport ListJobComponent from '../views/ListJobComponent.jsx';\r\nimport JobComponent from '../views/JobComponent.jsx';\r\nimport ListShiftComponent from '../views/ListShiftComponent.jsx';\r\nimport ShiftComponent from '../views/ShiftComponent.jsx';\r\nimport ListSkillComponent from '../views/ListSkillComponent.jsx';\r\nimport SkillComponent from '../views/SkillComponent.jsx';\r\nimport ListRoleComponent from '../views/ListRoleComponent.jsx';\r\nimport RoleComponent from '../views/RoleComponent.jsx';\r\nimport ListEmployeeSkillComponent from '../views/ListEmployeeSkillComponent.jsx';\r\nimport EmployeeSkillComponent from '../views/EmployeeSkillComponent.jsx';\r\nimport OptimizerComponent from '../views/OptimizerComponent.jsx';\r\n\r\nclass WorkforceApp extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"TodoApp\">\r\n                <HashRouter basename=\"/\">\r\n                    <>\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={LoginComponent}/>\r\n                            <Route path=\"/login\" component={LoginComponent}/>\r\n                            <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent}/>\r\n                            <AuthenticatedRoute path=\"/employees\" component={ListEmployeeComponent}/>\r\n                            <AuthenticatedRoute path=\"/employee/:id\" component={EmployeeComponent}/>\r\n                            <AuthenticatedRoute path=\"/employeeSkills\" component={ListEmployeeSkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/employeeSkill/:id\" component={EmployeeSkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/jobs\" component={ListJobComponent}/>\r\n                            <AuthenticatedRoute path=\"/job/:id\" component={JobComponent}/>\r\n                            <AuthenticatedRoute path=\"/roles\" component={ListRoleComponent}/>\r\n                            <AuthenticatedRoute path=\"/role/:id\" component={RoleComponent}/>\r\n                            <AuthenticatedRoute path=\"/shifts\" component={ListShiftComponent}/>\r\n                            <AuthenticatedRoute path=\"/shift/:id\" component={ShiftComponent}/>\r\n                            <AuthenticatedRoute path=\"/skills\" component={ListSkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/skill/:id\" component={SkillComponent}/>\r\n                            <AuthenticatedRoute path=\"/optimizer\" component={OptimizerComponent}/>\r\n                            <AuthenticatedRoute path=\"/logout\" component={LogoutComponent}/>\r\n                            <Route path=\"\" component={ErrorComponent}/>\r\n                        </Switch>                        \r\n                    </>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkforceApp;","import React from 'react';\nimport WorkforceApp from '../src/components/views/WorkforceApp.jsx';\nimport './App.css';\nimport './bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorkforceApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}